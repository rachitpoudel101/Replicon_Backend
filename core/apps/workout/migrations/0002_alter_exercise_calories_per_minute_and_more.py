# Generated by Django 5.2.6 on 2025-09-11 16:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("workout", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="exercise",
            name="calories_per_minute",
            field=models.FloatField(
                blank=True,
                help_text="Estimated calories burned per minute during this exercise",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="category",
            field=models.CharField(
                choices=[
                    ("chest", "Chest"),
                    ("back", "Back"),
                    ("shoulders", "Shoulders"),
                    ("biceps", "Biceps"),
                    ("triceps", "Triceps"),
                    ("legs", "Legs"),
                    ("abs", "Abs"),
                    ("cardio", "Cardio"),
                    ("full_body", "Full Body"),
                ],
                help_text="Category/muscle group targeted by this exercise",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="created_date",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Date and time when the exercise was created",
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="description",
            field=models.TextField(
                blank=True, help_text="Brief description of the exercise", null=True
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="difficulty_level",
            field=models.CharField(
                choices=[
                    ("beginner", "Beginner"),
                    ("intermediate", "Intermediate"),
                    ("advanced", "Advanced"),
                ],
                default="beginner",
                help_text="Difficulty level of the exercise",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="equipment_needed",
            field=models.CharField(
                blank=True,
                help_text="Equipment required to perform this exercise",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="exercise_image",
            field=models.ImageField(
                blank=True,
                help_text="Image demonstrating the exercise",
                null=True,
                upload_to="exercise_images/",
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="instructions",
            field=models.TextField(
                blank=True,
                help_text="Step-by-step instructions for performing the exercise",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether this exercise is currently available for use",
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="muscle_groups",
            field=models.CharField(
                help_text="Comma-separated list of muscle groups targeted (e.g., 'chest, triceps, shoulders')",
                max_length=200,
            ),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="name",
            field=models.CharField(help_text="Name of the exercise", max_length=100),
        ),
        migrations.AlterField(
            model_name="exercise",
            name="video_url",
            field=models.URLField(
                blank=True,
                help_text="URL to a video demonstration of the exercise",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="body_fat_percentage",
            field=models.FloatField(
                blank=True, help_text="Body fat percentage", null=True
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="measurements",
            field=models.JSONField(
                blank=True,
                help_text="Body measurements (chest, waist, hip, etc.) in JSON format",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="member",
            field=models.ForeignKey(
                help_text="Member whose progress is being tracked",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="progress_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="muscle_mass",
            field=models.FloatField(
                blank=True, help_text="Muscle mass in kilograms", null=True
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Additional notes about the progress record",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="progress_photos",
            field=models.ImageField(
                blank=True,
                help_text="Progress photos to track visual changes",
                null=True,
                upload_to="progress_photos/",
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="recorded_date",
            field=models.DateField(
                auto_now_add=True, help_text="Date when this progress was recorded"
            ),
        ),
        migrations.AlterField(
            model_name="memberprogress",
            name="weight",
            field=models.FloatField(help_text="Current weight in kilograms"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="calories",
            field=models.IntegerField(help_text="Total calories for this meal"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="carbs_grams",
            field=models.FloatField(help_text="Carbohydrate content in grams"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="created_date",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Date and time when the nutrition plan was created",
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="description",
            field=models.TextField(help_text="Description of the nutrition plan"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="fat_grams",
            field=models.FloatField(help_text="Fat content in grams"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether this nutrition plan is currently active",
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="meal_details",
            field=models.TextField(
                help_text="Detailed description of the meal and ingredients"
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="meal_type",
            field=models.CharField(
                choices=[
                    ("breakfast", "Breakfast"),
                    ("lunch", "Lunch"),
                    ("dinner", "Dinner"),
                    ("snack", "Snack"),
                ],
                help_text="Type of meal (breakfast, lunch, dinner, snack)",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="member",
            field=models.ForeignKey(
                help_text="Member assigned to this nutrition plan",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assigned_nutrition_plans",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="name",
            field=models.CharField(
                help_text="Name of the nutrition plan", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="protein_grams",
            field=models.FloatField(help_text="Protein content in grams"),
        ),
        migrations.AlterField(
            model_name="nutritionplan",
            name="trainer",
            field=models.ForeignKey(
                help_text="Trainer who created this nutrition plan",
                limit_choices_to={"role": "trainer"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_nutrition_plans",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="assigned_date",
            field=models.DateField(
                auto_now_add=True,
                help_text="Date when the member was assigned to the trainer",
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether this trainer-member relationship is currently active",
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="is_deleted",
            field=models.BooleanField(
                default=False, help_text="Soft delete flag for this assignment"
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="member",
            field=models.ForeignKey(
                help_text="Select the member to be assigned to this trainer",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_trainer",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Additional notes about this trainer-member assignment",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="trainermember",
            name="trainer",
            field=models.ForeignKey(
                help_text="Select the trainer for this member assignment",
                limit_choices_to={"role": "trainer"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trainer_members",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="date",
            field=models.DateField(
                auto_now_add=True, help_text="Date when the workout was performed"
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="duration_minutes",
            field=models.IntegerField(
                blank=True, help_text="Duration of the exercise in minutes", null=True
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="exercise",
            field=models.ForeignKey(
                help_text="Exercise that was performed",
                on_delete=django.db.models.deletion.CASCADE,
                to="workout.exercise",
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="member",
            field=models.ForeignKey(
                help_text="Member who performed this workout",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workout_logs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Additional notes about the workout performance",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="reps_completed",
            field=models.IntegerField(
                help_text="Number of repetitions actually completed"
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="sets_completed",
            field=models.IntegerField(help_text="Number of sets actually completed"),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="weight_used",
            field=models.FloatField(
                blank=True, help_text="Weight used during the exercise", null=True
            ),
        ),
        migrations.AlterField(
            model_name="workoutlog",
            name="workout_plan",
            field=models.ForeignKey(
                blank=True,
                help_text="Workout plan this log entry belongs to (optional)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="workout.workoutplan",
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="calories_target",
            field=models.IntegerField(
                blank=True,
                help_text="Target calories to burn during this workout",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="created_date",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Date and time when the workout plan was created",
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="day_of_week",
            field=models.CharField(
                choices=[
                    ("sunday", "Sunday"),
                    ("monday", "Monday"),
                    ("tuesday", "Tuesday"),
                    ("wednesday", "Wednesday"),
                    ("thursday", "Thursday"),
                    ("friday", "Friday"),
                ],
                help_text="Day of the week when this workout should be performed",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="description",
            field=models.TextField(
                help_text="Detailed description of the workout plan"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="duration_weeks",
            field=models.IntegerField(
                default=4, help_text="Duration of the workout plan in weeks"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="goal",
            field=models.CharField(
                choices=[
                    ("fat_loss", "Fat Loss"),
                    ("weight_loss", "Weight Loss"),
                    ("muscle_gain", "Muscle Gain"),
                    ("strength", "Strength Training"),
                    ("endurance", "Endurance"),
                    ("general_fitness", "General Fitness"),
                ],
                help_text="Primary fitness goal of this workout plan",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this workout plan is currently active"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="member",
            field=models.ForeignKey(
                help_text="Member assigned to this workout plan",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assigned_workout_plans",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="name",
            field=models.CharField(
                help_text="Name of the workout plan", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="trainer",
            field=models.ForeignKey(
                help_text="Trainer who created this workout plan",
                limit_choices_to={"role": "trainer"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_workout_plans",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplan",
            name="updated_date",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Date and time when the workout plan was last updated",
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="exercise",
            field=models.ForeignKey(
                help_text="Exercise to be included in the workout plan",
                on_delete=django.db.models.deletion.CASCADE,
                to="workout.exercise",
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Special instructions or notes for this exercise",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="order",
            field=models.IntegerField(
                help_text="Order/sequence of this exercise in the workout plan"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="reps",
            field=models.IntegerField(help_text="Number of repetitions per set"),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="rest_time_seconds",
            field=models.IntegerField(
                default=60, help_text="Rest time in seconds between sets"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="sets",
            field=models.IntegerField(
                help_text="Number of sets to perform for this exercise"
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="weight",
            field=models.FloatField(
                blank=True,
                help_text="Weight to be used for this exercise (optional for bodyweight exercises)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutplanexercise",
            name="workout_plan",
            field=models.ForeignKey(
                help_text="Workout plan this exercise belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plan_exercises",
                to="workout.workoutplan",
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="completed",
            field=models.BooleanField(
                default=False, help_text="Whether the workout session was completed"
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="created_date",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="Date and time when this session record was created",
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="end_time",
            field=models.DateTimeField(
                blank=True,
                help_text="Date and time when the workout session ended",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="feedback",
            field=models.TextField(
                blank=True,
                help_text="Member's feedback about the workout session",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="member",
            field=models.ForeignKey(
                help_text="Member performing this workout session",
                limit_choices_to={"role": "member"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workout_sessions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="rating",
            field=models.IntegerField(
                blank=True, help_text="Session rating on a scale of 1-5", null=True
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="start_time",
            field=models.DateTimeField(
                help_text="Date and time when the workout session started"
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="total_calories_burned",
            field=models.IntegerField(
                blank=True,
                help_text="Total calories burned during the session",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="workoutsession",
            name="workout_plan",
            field=models.ForeignKey(
                help_text="Workout plan being followed in this session",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sessions",
                to="workout.workoutplan",
            ),
        ),
    ]
